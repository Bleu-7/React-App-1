{"ast":null,"code":"var _jsxFileName = \"/Users/j.r./Desktop/School/Spring 2025/Mobile Development/Week 04/React-App-1/src/components/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(_ref) {\n  _s();\n  let {\n    initialMenuItems = []\n  } = _ref;\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  let [menuItems, setMenuItems] = useState(initialMenuItems); // Initialize with initialMenuItems\n  let [filter, setFilter] = useState(\"\");\n\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\") {\n      setMenuItems(prevMenuItems => [newMenuItem, ...prevMenuItems]);\n      setNewMenuItem(\"\"); // Clear the input after adding\n    }\n  }, [newMenuItem]);\n\n  // Filter menu items based on the filter value\n  const filteredMenuItems = menuItems.filter(item => item.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"/oaa6lp+ngPTBrV4SYZja6S1wK0=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","jsxDEV","_jsxDEV","Sidebar","_ref","_s","initialMenuItems","newMenuItem","setNewMenuItem","menuItems","setMenuItems","filter","setFilter","addMenuItem","trim","prevMenuItems","filteredMenuItems","item","toLowerCase","includes","children","type","id","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","map","index","_c","$RefreshReg$"],"sources":["/Users/j.r./Desktop/School/Spring 2025/Mobile Development/Week 04/React-App-1/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nexport default function Sidebar({ initialMenuItems = [] }) {\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  let [menuItems, setMenuItems] = useState(initialMenuItems); // Initialize with initialMenuItems\n  let [filter, setFilter] = useState(\"\");\n\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\") {\n      setMenuItems((prevMenuItems) => [newMenuItem, ...prevMenuItems]);\n      setNewMenuItem(\"\"); // Clear the input after adding\n    }\n  }, [newMenuItem]);\n\n  // Filter menu items based on the filter value\n  const filteredMenuItems = menuItems.filter((item) =>\n    item.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        id=\"newMenuItemValue\"\n        value={newMenuItem}\n        onChange={(event) => setNewMenuItem(event.target.value)}\n      ></input>\n      <br />\n      <button onClick={addMenuItem}>Add Item</button>\n      <br />\n      <input\n        id=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={(event) => setFilter(event.target.value)}\n        placeholder=\"Filter by...\"\n      ></input>\n      <ul>\n        {filteredMenuItems.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAE7C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,eAAe,SAASC,OAAOA,CAAAC,IAAA,EAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,gBAAgB,GAAG;EAAG,CAAC,GAAAF,IAAA;EACvD,IAAI,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAI,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAACO,gBAAgB,CAAC,CAAC,CAAC;EAC5D,IAAI,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA,IAAIc,WAAW,GAAGb,WAAW,CAAC,MAAM;IAClC,IAAIO,WAAW,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7BJ,YAAY,CAAEK,aAAa,IAAK,CAACR,WAAW,EAAE,GAAGQ,aAAa,CAAC,CAAC;MAChEP,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMS,iBAAiB,GAAGP,SAAS,CAACE,MAAM,CAAEM,IAAI,IAC9CA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,MAAM,CAACO,WAAW,CAAC,CAAC,CAClD,CAAC;EAED,oBACEhB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,kBAAkB;MACrBC,KAAK,EAAEhB,WAAY;MACnBiB,QAAQ,EAAGC,KAAK,IAAKjB,cAAc,CAACiB,KAAK,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACT5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN5B,OAAA;MAAQ6B,OAAO,EAAElB,WAAY;MAAAO,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/C5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN5B,OAAA;MACEoB,EAAE,EAAC,QAAQ;MACXD,IAAI,EAAC,MAAM;MACXE,KAAK,EAAEZ,MAAO;MACda,QAAQ,EAAGC,KAAK,IAAKb,SAAS,CAACa,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;MACnDS,WAAW,EAAC;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACT5B,OAAA;MAAAkB,QAAA,EACGJ,iBAAiB,CAACiB,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,kBACjChC,OAAA;QAAAkB,QAAA,EAAiBH;MAAI,GAAZiB,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACzB,EAAA,CA5CuBF,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}